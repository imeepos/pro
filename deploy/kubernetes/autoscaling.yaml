# AutoScaling configuration for Weibo Crawler System
---
# Horizontal Pod Autoscaler for Crawler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: crawler-hpa
  namespace: weibo-crawler
  labels:
    app: weibo-crawler
    component: crawler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: crawler
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: crawler_queue_size
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max

---
# Horizontal Pod Autoscaler for Nginx
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nginx-hpa
  namespace: weibo-crawler
  labels:
    app: weibo-crawler
    component: nginx
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      selectPolicy: Max

---
# Vertical Pod Autoscaler for Crawler (optional)
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: crawler-vpa
  namespace: weibo-crawler
  labels:
    app: weibo-crawler
    component: crawler
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: crawler
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: crawler
      minAllowed:
        cpu: 500m
        memory: 1Gi
      maxAllowed:
        cpu: 4000m
        memory: 8Gi
      controlledResources: ["cpu", "memory"]

---
# Pod Disruption Budget for Crawler
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: crawler-pdb
  namespace: weibo-crawler
  labels:
    app: weibo-crawler
    component: crawler
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: weibo-crawler
      component: crawler

---
# Pod Disruption Budget for Nginx
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: nginx-pdb
  namespace: weibo-crawler
  labels:
    app: weibo-crawler
    component: nginx
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: weibo-crawler
      component: nginx

---
# Resource Quota for namespace
apiVersion: v1
kind: ResourceQuota
metadata:
  name: weibo-crawler-quota
  namespace: weibo-crawler
  labels:
    app: weibo-crawler
    component: quota
spec:
  hard:
    requests.cpu: "20"
    requests.memory: 40Gi
    limits.cpu: "40"
    limits.memory: 80Gi
    persistentvolumeclaims: "20"
    pods: "50"
    services: "20"
    secrets: "20"
    configmaps: "20"
    count/deployments.apps: "20"
    count/statefulsets.apps: "10"

---
# Limit Range for namespace
apiVersion: v1
kind: LimitRange
metadata:
  name: weibo-crawler-limits
  namespace: weibo-crawler
  labels:
    app: weibo-crawler
    component: limits
spec:
  limits:
  - default:
      cpu: 500m
      memory: 512Mi
    defaultRequest:
      cpu: 100m
      memory: 128Mi
    type: Container
  - max:
      cpu: 4000m
      memory: 8Gi
    min:
      cpu: 50m
      memory: 64Mi
    type: Container
  - max:
      storage: 1Ti
    min:
      storage: 1Gi
    type: PersistentVolumeClaim