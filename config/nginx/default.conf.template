log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for"';

access_log /var/log/nginx/access.log main;

resolver 127.0.0.11 valid=30s;
resolver_timeout 5s;

client_max_body_size 100m;

upstream minio_api {
    server minio:9000;
}

upstream minio_console {
    server minio:9001;
}

upstream api {
    server api:3000;
}

upstream admin {
    server admin:80;
}

upstream web {
    server web:80;
}

server {
    listen 80 default_server;
    listen 443;
    server_name _;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_connect_timeout 5s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # 启用 Gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;

    # 健康检查
    location = /health {
        access_log off;
        return 200 'ok';
    }

    location = /healthz {
        access_log off;
        return 200 'ok';
    }

    # API 反向代理（优先级最高）
    location /api/ {
        proxy_pass http://api/;
        proxy_redirect off;
        proxy_buffering off;

        # WebSocket 支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Admin 应用反向代理（优先级第二）
    location /admin {
        proxy_pass http://admin;
        proxy_redirect off;

        # 支持 SPA 路由
        proxy_intercept_errors on;
        error_page 404 = /admin/index.html;
    }

    # 静态资源缓存策略
    location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri @web;
    }

    # MinIO API
    location /minio/ {
        proxy_redirect off;
        proxy_buffering off;
        proxy_pass http://minio_api/;
    }

    # MinIO Console
    location /minio-console/ {
        proxy_redirect off;
        proxy_pass http://minio_console/;
    }

    # Web 应用反向代理（默认路由，优先级最低）
    location / {
        proxy_pass http://web;
        proxy_redirect off;

        # HTML 不缓存
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # 静态资源回退
    location @web {
        proxy_pass http://web;
        proxy_redirect off;
    }
}

