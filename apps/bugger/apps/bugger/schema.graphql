# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AssignBugInput {
  assigneeId: String!
}

type BugCommentModel {
  authorId: String
  bugId: String!
  content: String!
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
}

input BugFiltersInput {
  assigneeId: String
  limit: Float
  page: Float
  priority: [BugPriority!]
  reporterId: String
  search: String
  sortBy: String
  sortOrder: String
  status: [BugStatus!]
}

type BugModel {
  actualBehavior: String
  actualHours: Float
  assigneeId: String
  category: String
  closedAt: DateTime
  closedBy: String
  createdAt: DateTime!
  description: String
  dueDate: DateTime
  estimatedHours: Float
  expectedBehavior: String
  id: ID!
  priority: BugPriority!
  reporterId: String!
  reproductionRate: String
  resolvedAt: DateTime
  resolvedBy: String
  status: BugStatus!
  stepsToReproduce: String
  title: String!
  updatedAt: DateTime!
}

enum BugPriority {
  CRITICAL
  HIGH
  LOW
  MEDIUM
}

type BugPriorityStatistics {
  critical: Int!
  high: Int!
  low: Int!
  medium: Int!
}

type BugStatisticsModel {
  byPriority: BugPriorityStatistics!
  byStatus: BugStatusStatistics!
  total: Int!
}

enum BugStatus {
  CLOSED
  IN_PROGRESS
  OPEN
  REJECTED
  REOPENED
  RESOLVED
}

type BugStatusStatistics {
  closed: Int!
  inProgress: Int!
  open: Int!
  resolved: Int!
}

type BugsPaginationModel {
  bugs: [BugModel!]!
  total: Int!
}

input CreateBugCommentInput {
  authorId: String
  content: String!
}

input CreateBugInput {
  actualBehavior: String
  assigneeId: String
  category: String
  description: String
  dueDate: DateTime
  estimatedHours: Float
  expectedBehavior: String
  priority: BugPriority
  reproductionRate: String
  stepsToReproduce: String
  title: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  addBugComment(bugId: ID!, input: CreateBugCommentInput!): BugCommentModel!
  assignBug(id: ID!, input: AssignBugInput!): BugModel!
  createBug(input: CreateBugInput!): BugModel!
  removeBug(id: ID!): Boolean!
  updateBug(id: ID!, input: UpdateBugInput!): BugModel!
  updateBugStatus(id: ID!, input: UpdateBugStatusInput!): BugModel!
}

type Query {
  bug(id: ID!): BugModel!
  bugComments(bugId: ID!): [BugCommentModel!]!
  bugStatistics: BugStatisticsModel!
  bugs(filters: BugFiltersInput): BugsPaginationModel!
  health: String!
}

input UpdateBugInput {
  actualBehavior: String
  actualHours: Float
  assigneeId: String
  category: String
  description: String
  dueDate: DateTime
  estimatedHours: Float
  expectedBehavior: String
  priority: BugPriority
  reproductionRate: String
  status: BugStatus
  stepsToReproduce: String
  title: String
}

input UpdateBugStatusInput {
  comment: String
  status: BugStatus!
}